// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SlnErp102.Data;

#nullable disable

namespace SlnErp102.Data.Migrations
{
    [DbContext(typeof(SlnDbContext))]
    [Migration("20220119152104_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SlnErp102.Core.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblCities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Istanbul",
                            Region = "Marmara"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ankara",
                            Region = "Ic Anadolu"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Izmir",
                            Region = "Ege"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Antalya",
                            Region = "Akdeniz"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Diyarbakir",
                            Region = "Guney Dogu Anadolu"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Samsun",
                            Region = "Karadeniz"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Kars",
                            Region = "Dogu Anadolu"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblDepartments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Satin Alma",
                            Type = "H"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Finans",
                            Type = "H"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ameliyathane",
                            Type = "H"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rektorluk",
                            Type = "H"
                        },
                        new
                        {
                            Id = 5,
                            Name = "IK",
                            Type = "H"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hasta Haklari",
                            Type = "H"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Finans",
                            Type = "C"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Satin Alma",
                            Type = "C"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Depo",
                            Type = "C"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sahip",
                            Type = "C"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("tblCompanies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyTypeId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8978),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8979),
                            ModifiedUser = "system",
                            Name = "Ortek"
                        },
                        new
                        {
                            Id = 2,
                            CompanyTypeId = 2,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8980),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8981),
                            ModifiedUser = "system",
                            Name = "Syntex"
                        },
                        new
                        {
                            Id = 3,
                            CompanyTypeId = 3,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8982),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8982),
                            ModifiedUser = "system",
                            Name = "Kayacan"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.CompanyBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceTitle")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.ToTable("tblCompanyBranches", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Esenyurt",
                            CityId = 1,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8824),
                            InvoiceTitle = "Ortek Ltd.Sti",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8824),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Izmir",
                            CityId = 2,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8825),
                            InvoiceTitle = "Ortek Ltd.Sti",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8825),
                            ModifiedUser = "system",
                            Name = "Izmir Sube"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Ankara",
                            CityId = 3,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8826),
                            InvoiceTitle = "Ortek Ltd.Sti",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8827),
                            ModifiedUser = "system",
                            Name = "Ankara Sube"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Esenyurt",
                            CityId = 1,
                            CompanyId = 2,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8827),
                            InvoiceTitle = "Ortek Ltd.Sti",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8828),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Izmir",
                            CityId = 2,
                            CompanyId = 2,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8829),
                            InvoiceTitle = "Ortek Ltd.Sti",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8829),
                            ModifiedUser = "system",
                            Name = "Izmir Sube"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Ankara",
                            CityId = 3,
                            CompanyId = 2,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8830),
                            InvoiceTitle = "Ortek Ltd.Sti",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8830),
                            ModifiedUser = "system",
                            Name = "Ankara Sube"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.CompanyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Officer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("tblCompanyDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            DepartmentId = 7,
                            Email = "111@gmail.com",
                            Fax = "111",
                            Gsm = "111",
                            Officer = "Sinan",
                            Phone = "111"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            DepartmentId = 8,
                            Email = "222@gmail.com",
                            Fax = "222",
                            Gsm = "222",
                            Officer = "Sukran",
                            Phone = "222"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            DepartmentId = 9,
                            Email = "333@gmail.com",
                            Fax = "333",
                            Gsm = "333",
                            Officer = "Turgay",
                            Phone = "333"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            DepartmentId = 10,
                            Email = "444@gmail.com",
                            Fax = "444",
                            Gsm = "444",
                            Officer = "Tahir",
                            Phone = "444"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblCompanyTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Musteri"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tedarikci"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ana Satici"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Distributor"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Doctors.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("date");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ClinicAddress")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("tblDoctors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9021),
                            CityId = 1,
                            ClinicAddress = "Fulya/Besiktas",
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9021),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9022),
                            ModifiedUser = "system",
                            Name = "Omer Taser",
                            Title = 0
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9023),
                            CityId = 1,
                            ClinicAddress = "Tesvikiye/Sisli",
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9023),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9024),
                            ModifiedUser = "system",
                            Name = "Mehmet Demirhan",
                            Title = 0
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9025),
                            CityId = 1,
                            ClinicAddress = "Abide-i Hürriyet Cd No:166, 34381 Şişli/İstanbul",
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9025),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9025),
                            ModifiedUser = "system",
                            Name = "Azmi Hamzaoglu",
                            Title = 0
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Doctors.DoctorDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("HospitalId");

                    b.ToTable("tblDoctorDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            Email = "taser@gmail.com",
                            Fax = "111",
                            Gsm = "111",
                            HospitalId = 1,
                            Phone = "111"
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            Email = "demirhan@gmail.com",
                            Fax = "222",
                            Gsm = "222",
                            HospitalId = 3,
                            Phone = "222"
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 3,
                            Email = "hamzaoglu@gmail.com",
                            Fax = "333",
                            Gsm = "333",
                            HospitalId = 2,
                            Phone = "333"
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 3,
                            Email = "",
                            Fax = "",
                            Gsm = "",
                            HospitalId = 6,
                            Phone = "444"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Employees.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("date");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("WorkEnd")
                        .HasColumnType("date");

                    b.Property<DateTime>("WorkStart")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("tblEmployees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9155),
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9156),
                            Description = "Aciklama1",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9156),
                            ModifiedUser = "system",
                            Name = "Serdar",
                            Picture = "user1.png",
                            WorkEnd = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9154),
                            WorkStart = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9154)
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9158),
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9158),
                            Description = "Aciklama2",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9159),
                            ModifiedUser = "system",
                            Name = "Recep",
                            Picture = "user2.png",
                            WorkEnd = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9157),
                            WorkStart = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9157)
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9160),
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9160),
                            Description = "Aciklama3",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9161),
                            ModifiedUser = "system",
                            Name = "Melek",
                            Picture = "user3.png",
                            WorkEnd = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9160),
                            WorkStart = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9159)
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Employees.EmployeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("tblEmployeeDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Email = "111@gmail.com",
                            EmployeeId = 1,
                            Fax = "234",
                            Gsm = "1234",
                            Phone = "1234"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Email = "222@gmail.com",
                            EmployeeId = 2,
                            Fax = "234",
                            Gsm = "1234",
                            Phone = "1234"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Email = "333@gmail.com",
                            EmployeeId = 3,
                            Fax = "234",
                            Gsm = "1234",
                            Phone = "1234"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("HospitalTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HospitalTypeId");

                    b.ToTable("tblHospitals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8656),
                            HospitalName = "AciBadem",
                            HospitalTypeId = 1,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8646),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8658),
                            HospitalName = "Florence Nightingale",
                            HospitalTypeId = 1,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8657),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8659),
                            HospitalName = "Medicana",
                            HospitalTypeId = 1,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8658),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8660),
                            HospitalName = "Beylikduzu Devlet",
                            HospitalTypeId = 2,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8659),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8661),
                            HospitalName = "KANUNİ SULTAN SÜLEYMAN",
                            HospitalTypeId = 9,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8660),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8662),
                            HospitalName = "Cam ve Sakura",
                            HospitalTypeId = 3,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8661),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8663),
                            HospitalName = "Kocaeli Üniversitesi Hastanesi",
                            HospitalTypeId = 4,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8662),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8664),
                            HospitalName = "Gata",
                            HospitalTypeId = 6,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8663),
                            ModifiedUser = "system"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8665),
                            HospitalName = "Bezmialem Vakıf Üni. Tıp Fakültesi Hastanesi",
                            HospitalTypeId = 7,
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8664),
                            ModifiedUser = "system"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("HospitalId");

                    b.ToTable("tblHospitalBranches", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Acibadem/Kadikoy",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8758),
                            HospitalId = 1,
                            InvoiceTitle = "Acibadem Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8759),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Çankaya/Ankara",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8760),
                            HospitalId = 1,
                            InvoiceTitle = "Acibadem Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8761),
                            ModifiedUser = "system",
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tepebaşı/Eskişehir",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8762),
                            HospitalId = 1,
                            InvoiceTitle = "Acibadem Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8762),
                            ModifiedUser = "system",
                            Name = "Eskisehir"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Şişli/İstanbul",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8763),
                            HospitalId = 2,
                            InvoiceTitle = "Florence Nightingale Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8763),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Beylikdüzü/İstanbul",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8764),
                            HospitalId = 3,
                            InvoiceTitle = "Medikana Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8764),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Beylikdüzü/İstanbul",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8765),
                            HospitalId = 4,
                            InvoiceTitle = "Devlet Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8765),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Gazi Osman Pasa/İstanbul",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8766),
                            HospitalId = 5,
                            InvoiceTitle = "Devlet Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8766),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Basaksehir/İstanbul",
                            CityId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8767),
                            HospitalId = 6,
                            InvoiceTitle = "Devlet Saglik Hizmetleri A.S.",
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(8767),
                            ModifiedUser = "system",
                            Name = "Merkez"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HospitalBranchId")
                        .HasColumnType("int");

                    b.Property<string>("Officer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HospitalBranchId");

                    b.ToTable("tblHospitalDetails", (string)null);
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblHospitalTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ozel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Devlet"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sehir"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Universite"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vakif"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Askeri"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sb"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Klinik"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Arastirma"
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Stocks.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BranchNoId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SutCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SutDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("SutPrice")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("tblProducts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchNoId = 1,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9246),
                            Description = "Suture Passer, Transosseous",
                            EntryDate = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9243),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9246),
                            ModifiedUser = "system",
                            Picture = "product1.jpg",
                            ProductCode = "AR-1000",
                            SutCode = "AE-1000",
                            SutDescription = "DÜZ TİTANYUM",
                            SutPrice = 125.75m
                        },
                        new
                        {
                            Id = 2,
                            BranchNoId = 2,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9248),
                            Description = "Suture Passer, Transosseous1",
                            EntryDate = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9247),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9248),
                            ModifiedUser = "system",
                            Picture = "product2.jpg",
                            ProductCode = "AR-1001",
                            SutCode = "AE-1001",
                            SutDescription = "DÜZ TİTANYUM",
                            SutPrice = 155.75m
                        },
                        new
                        {
                            Id = 3,
                            BranchNoId = 1,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9250),
                            Description = "Suture Passer, Transosseous2",
                            EntryDate = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9249),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9250),
                            ModifiedUser = "system",
                            Picture = "product3.jpg",
                            ProductCode = "AR-1002",
                            SutCode = "AE-1002",
                            SutDescription = "DÜZ TİTANYUM",
                            SutPrice = 115.75m
                        },
                        new
                        {
                            Id = 4,
                            BranchNoId = 1,
                            CompanyId = 1,
                            CreatedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9251),
                            Description = "Suture Passer, Transosseous3",
                            EntryDate = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9251),
                            ModifiedOn = new DateTime(2022, 1, 19, 18, 21, 3, 881, DateTimeKind.Local).AddTicks(9252),
                            ModifiedUser = "system",
                            Picture = "product4.jpg",
                            ProductCode = "AR-1003",
                            SutCode = "AE-1003",
                            SutDescription = "DÜZ TİTANYUM",
                            SutPrice = 215.25m
                        });
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Stocks.Products.ProductEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<int>("EntryTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LotSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("tblProductEntries", (string)null);
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Stocks.Products.StockState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BranchQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ConsignmentQuantity")
                        .HasColumnType("int");

                    b.Property<string>("LotSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ShelfQuantity")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("TransferedProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblStockStates", (string)null);
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.Company", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Infos.Companies.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.CompanyBranch", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.City", "City")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Infos.Companies.Company", "Company")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.CompanyDetail", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Infos.Companies.Company", "Company")
                        .WithMany("CompanyDetails")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Department", "Department")
                        .WithMany("CompanyDetails")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Doctors.Doctor", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.City", "City")
                        .WithMany("Doctors")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Doctors.DoctorDetail", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Infos.Doctors.Doctor", "Doctor")
                        .WithMany("DoctorDetails")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Infos.Hospitals.Hospital", "Hospital")
                        .WithMany("DoctorDetails")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Employees.Employee", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.City", "City")
                        .WithMany("Employees")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Employees.EmployeeDetail", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Department", "Department")
                        .WithMany("EmployeeDetails")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Infos.Employees.Employee", "Employee")
                        .WithMany("EmployeeDetails")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.Hospital", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Infos.Hospitals.HospitalType", "HospitalType")
                        .WithMany("Hospitals")
                        .HasForeignKey("HospitalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalType");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalBranch", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.City", "City")
                        .WithMany("HospitalBranches")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Infos.Hospitals.Hospital", "Hospital")
                        .WithMany("HospitalBranch")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalDetail", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Department", "Department")
                        .WithMany("HospitalDetails")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Infos.Hospitals.HospitalBranch", "HospitalBranches")
                        .WithMany("HospitalDetails")
                        .HasForeignKey("HospitalBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("HospitalBranches");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Stocks.Products.Product", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Infos.Companies.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Stocks.Products.ProductEntry", b =>
                {
                    b.HasOne("SlnErp102.Core.Models.Infos.Companies.Company", "Company")
                        .WithMany("ProductEntries")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SlnErp102.Core.Models.Stocks.Products.Product", "Product")
                        .WithMany("ProductEntries")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.City", b =>
                {
                    b.Navigation("CompanyBranches");

                    b.Navigation("Doctors");

                    b.Navigation("Employees");

                    b.Navigation("HospitalBranches");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Department", b =>
                {
                    b.Navigation("CompanyDetails");

                    b.Navigation("EmployeeDetails");

                    b.Navigation("HospitalDetails");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.Company", b =>
                {
                    b.Navigation("CompanyBranches");

                    b.Navigation("CompanyDetails");

                    b.Navigation("ProductEntries");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Companies.CompanyType", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Doctors.Doctor", b =>
                {
                    b.Navigation("DoctorDetails");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Employees.Employee", b =>
                {
                    b.Navigation("EmployeeDetails");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.Hospital", b =>
                {
                    b.Navigation("DoctorDetails");

                    b.Navigation("HospitalBranch");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalBranch", b =>
                {
                    b.Navigation("HospitalDetails");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Infos.Hospitals.HospitalType", b =>
                {
                    b.Navigation("Hospitals");
                });

            modelBuilder.Entity("SlnErp102.Core.Models.Stocks.Products.Product", b =>
                {
                    b.Navigation("ProductEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
